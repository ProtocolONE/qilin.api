openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/protocolone6/Qilin/1.0.0
info:
  description: |
    # Introduction 

  version: "1.0.0a"
  title: Qilin API server
  contact:
    email: makims.blinenkov@protocol.one
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /api/v1/vendors/{id}:
    get:
      tags:
        - vendor
      summary: Get vendor by it's ID or get error
      operationId: getVendorByID
      parameters:
        - name: id
          in: path
          description: Vendor ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'

  /api/v1/vendors:
    get:
      tags:
        - vendor
      summary: Retrive list of vendors
      operationId: getVendors
      parameters:
        - name: limit
          in: query
          description: Limit for query
          required: false
          schema:
            type: integer
            default: "20"
            minimum: 1
        - name: offset
          in: query
          description: Offset for query
          required: false
          schema:
            type: integer
            default: "0"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vendor"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - vendor
      summary: Create new Vendor
      operationId: addVendor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
      responses:
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalError'
    put:
      tags:
        - vendor
      summary: Save Vendor
      operationId: updateVendor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    Vendor:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        domain3:
          type: string
        email:
          type: string
          format: email
        manager_id:
          type: string
          format: uuid
      required:
        - id
        - name
        - domain3
        - email

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: Internal Server Error
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 409
            message: "Resource with same unique id already exists"
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 422
            message: "Fields required: 'title, description'"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'